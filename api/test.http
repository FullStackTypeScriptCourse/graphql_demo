@baseUrl = http://localhost:4000
# @admintoken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDU2YjJlYWU0YWQyNmE1M2IxNmVhOGUiLCJ1c2VyTmFtZSI6InRoYSIsImlhdCI6MTY4MzUzMzc4MCwiZXhwIjoxNjgzNTM1NTgwfQ.7dJl9RceT0X9PsRCxk3wx38cCKOlMBhR_Gpnz1fF0Og
# @norolestoken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDU3MzQzNTk5YmU0Mjg0MjdhNzA5ZjYiLCJ1c2VyTmFtZSI6ImpvZSIsImlhdCI6MTY4MzUzMjM0MSwiZXhwIjoxNjgzNTM0MTQxfQ.ujQIWA59CYnS3F8bs8jmAbXtTDICp1NoZQ_8KOheeE8

### login ADMIN user
# @name adminLogin
POST {{baseUrl}}/api/users/login HTTP/1.1
Content-Type: application/json

{
    "email": "thomas@webtrade.dk",
    "password": "test123"
}
### login user with NO ROLES
# @name noRolesLogin
POST {{baseUrl}}/api/users/login HTTP/1.1
Content-Type: application/json

{
    "email": "joe@webtrade.dk",
    "password": "test123"
}
### Remember to execute adminLogin and noRolesLogin to fill the below 2 variables ###
@adminToken = {{adminLogin.response.body.token}}
@noRolesToken = {{noRolesLogin.response.body.token}}


### Send token to graphql endpoint ###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
  "query": "query { users { username roles } }"
}

### See all tasks ###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json

{
    "query": "query { tasks { title description } }"
}

### See specific task ###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json

{
    "query": "query Task($taskId: String!) { task(id: $taskId) { name } }",
    "variables": { "taskId": "6459efda5f5c557e378f4969" }
}

### Create task (protected by admin role)###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
    "query": "mutation CreateTask($input: CreateTaskInput!) { createTask(input: $input) { name title imageUrl description level studyPoints correctAnswer } }",
    "variables": { "input": { "name": "bottle volume", "correctAnswer": 7140, "description": "A bottle has a diameter of 1 dm and is filled up to 15 cm with water. How much water is in the bottle measured in cm3?", "imageUrl": "https://m.media-amazon.com/images/I/61ybWON8zuL._SL1500_.jpg", "level": 7, "studyPoints": 10, "title": "Calculate the volume of water in a bottle", "measureUnit": { "name": "m3" } } }
}

#   "variables": { "input": { "name": "football field area", "correctAnswer": 7140, "description": "A standard football field is 105 meters long and 68 meters wide. What is the area of a standard football field", "imageUrl": "https://en.wikipedia.org/wiki/Football_pitch#/media/File:Soccer_pitch_dimensions.png", "level": 7, "studyPoints": 10, "title": "Calculate the area of a football field", "measureUnit": { "name": "m2" } } }

### Create task (protected by admin role)###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
    "query": "mutation UpdateTask($updateTaskId: String!, $input: UpdateTaskInput!) { updateTask(id: $updateTaskId, input: $input) { name title imageUrl description level studyPoints correctAnswer measureUnit { name } } }",
    "variables": {"updateTaskId": "645a1f67c4011750b9d59386", "input": { "correctAnswer": 1177.5 } }
}

### Delete task (protected by admin role)###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
    "query": "mutation deleteTask($taskId: String!) { deleteTask(id: $taskId) { name  } }",
    "variables": {"taskId": "645a1f67c4011750b9d59386"}
}

### Create User (protected by admin role)###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
    "query": "mutation CreateUser($input: CreateUserInput!) { createUser(input: $input) { username email password roles } }",
    "variables": { "input": { "username": "jacob", "email": "jacob@webtrade.dk", "password": "test123" } }
}

### Update User (protected by admin role)###
POST {{baseUrl}}/graphql HTTP/1.1
Content-Type: application/json
Authorization:{{adminToken}}

{
    "query": "mutation UpdateUser($email: String!, $input: UpdateUserInput!) { updateUser(email: $email, input: $input) { username email password roles } }",
    "variables": { "email": "jill@webtrade.dk", "input": { "roles": ["user"] } }
}